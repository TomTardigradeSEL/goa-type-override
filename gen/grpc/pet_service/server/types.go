// Code generated by goa v3.11.3, DO NOT EDIT.
//
// Pet Service gRPC server types
//
// Command:
// $ goa gen petsvc/design

package server

import (
	pet_servicepb "petsvc/gen/grpc/pet_service/pb"
	petservice "petsvc/gen/pet_service"
	"petsvc/interfaces/pets"
	pets "petsvc/interfaces/pets"
)

// NewProtoSendDogsResponse builds the gRPC response type from the result of
// the "SendDogs" endpoint of the "Pet Service" service.
func NewProtoSendDogsResponse() *pet_servicepb.SendDogsResponse {
	message := &pet_servicepb.SendDogsResponse{}
	return message
}

func NewSendDogsStreamingRequestDogPayload(v *pet_servicepb.SendDogsStreamingRequest) *petservice.DogPayload {
	spayload := &petservice.DogPayload{
		Dog: pets.Dog(v.Dog),
	}
	return spayload
}

// NewProtoReceiveDogsResponse builds the gRPC response type from the result of
// the "ReceiveDogs" endpoint of the "Pet Service" service.
func NewProtoReceiveDogsResponse(result *petservice.DogPayload) *pet_servicepb.ReceiveDogsResponse {
	message := &pet_servicepb.ReceiveDogsResponse{
		Dog: string(result.Dog),
	}
	return message
}

func NewProtoDogPayloadReceiveDogsResponse(result *petservice.DogPayload) *pet_servicepb.ReceiveDogsResponse {
	v := &pet_servicepb.ReceiveDogsResponse{
		Dog: string(result.Dog),
	}
	return v
}

// NewSendCatPayload builds the payload of the "SendCat" endpoint of the "Pet
// Service" service from the gRPC request type.
func NewSendCatPayload(message *pet_servicepb.SendCatRequest) *petservice.CatPayload {
	v := &petservice.CatPayload{
		Cat: pets.Cat(message.Cat),
	}
	return v
}

// NewProtoSendCatResponse builds the gRPC response type from the result of the
// "SendCat" endpoint of the "Pet Service" service.
func NewProtoSendCatResponse() *pet_servicepb.SendCatResponse {
	message := &pet_servicepb.SendCatResponse{}
	return message
}

// NewProtoReceiveCatResponse builds the gRPC response type from the result of
// the "ReceiveCat" endpoint of the "Pet Service" service.
func NewProtoReceiveCatResponse(result *petservice.CatPayload) *pet_servicepb.ReceiveCatResponse {
	message := &pet_servicepb.ReceiveCatResponse{
		Cat: string(result.Cat),
	}
	return message
}
