// Code generated by goa v3.11.3, DO NOT EDIT.
//
// Pet Service gRPC client types
//
// Command:
// $ goa gen petsvc/design

package client

import (
	pet_servicepb "petsvc/gen/grpc/pet_service/pb"
	petservice "petsvc/gen/pet_service"
	"petsvc/interfaces/pets"
	pets "petsvc/interfaces/pets"
)

func NewProtoDogPayloadSendDogsStreamingRequest(spayload *petservice.DogPayload) *pet_servicepb.SendDogsStreamingRequest {
	v := &pet_servicepb.SendDogsStreamingRequest{
		Dog: string(spayload.Dog),
	}
	return v
}

// NewProtoReceiveDogsRequest builds the gRPC request type from the payload of
// the "ReceiveDogs" endpoint of the "Pet Service" service.
func NewProtoReceiveDogsRequest() *pet_servicepb.ReceiveDogsRequest {
	message := &pet_servicepb.ReceiveDogsRequest{}
	return message
}

func NewReceiveDogsResponseDogPayload(v *pet_servicepb.ReceiveDogsResponse) *petservice.DogPayload {
	result := &petservice.DogPayload{
		Dog: pets.Dog(v.Dog),
	}
	return result
}

// NewProtoSendCatRequest builds the gRPC request type from the payload of the
// "SendCat" endpoint of the "Pet Service" service.
func NewProtoSendCatRequest(payload *petservice.CatPayload) *pet_servicepb.SendCatRequest {
	message := &pet_servicepb.SendCatRequest{
		Cat: string(payload.Cat),
	}
	return message
}

// NewProtoReceiveCatRequest builds the gRPC request type from the payload of
// the "ReceiveCat" endpoint of the "Pet Service" service.
func NewProtoReceiveCatRequest() *pet_servicepb.ReceiveCatRequest {
	message := &pet_servicepb.ReceiveCatRequest{}
	return message
}

// NewReceiveCatResult builds the result type of the "ReceiveCat" endpoint of
// the "Pet Service" service from the gRPC response type.
func NewReceiveCatResult(message *pet_servicepb.ReceiveCatResponse) *petservice.CatPayload {
	result := &petservice.CatPayload{
		Cat: pets.Cat(message.Cat),
	}
	return result
}
