// Code generated by goa v3.11.3, DO NOT EDIT.
//
// Pet Service service
//
// Command:
// $ goa gen petsvc/design

package petservice

import (
	"context"
	"petsvc/interfaces/pets"
)

// Service is the Pet Service service interface.
type Service interface {
	// SendDogs implements SendDogs.
	SendDogs(context.Context, SendDogsServerStream) (err error)
	// ReceiveDogs implements ReceiveDogs.
	ReceiveDogs(context.Context, ReceiveDogsServerStream) (err error)
	// SendCat implements SendCat.
	SendCat(context.Context, *CatPayload) (err error)
	// ReceiveCat implements ReceiveCat.
	ReceiveCat(context.Context) (res *CatPayload, err error)
}

// ServiceName is the name of the service as defined in the design. This is the
// same value that is set in the endpoint request contexts under the ServiceKey
// key.
const ServiceName = "Pet Service"

// MethodNames lists the service method names as defined in the design. These
// are the same values that are set in the endpoint request contexts under the
// MethodKey key.
var MethodNames = [4]string{"SendDogs", "ReceiveDogs", "SendCat", "ReceiveCat"}

// SendDogsServerStream is the interface a "SendDogs" endpoint server stream
// must satisfy.
type SendDogsServerStream interface {
	// Recv reads instances of "DogPayload" from the stream.
	Recv() (*DogPayload, error)
	// Close closes the stream.
	Close() error
}

// SendDogsClientStream is the interface a "SendDogs" endpoint client stream
// must satisfy.
type SendDogsClientStream interface {
	// Send streams instances of "DogPayload".
	Send(*DogPayload) error
	// Close closes the stream.
	Close() error
}

// ReceiveDogsServerStream is the interface a "ReceiveDogs" endpoint server
// stream must satisfy.
type ReceiveDogsServerStream interface {
	// Send streams instances of "DogPayload".
	Send(*DogPayload) error
	// Close closes the stream.
	Close() error
}

// ReceiveDogsClientStream is the interface a "ReceiveDogs" endpoint client
// stream must satisfy.
type ReceiveDogsClientStream interface {
	// Recv reads instances of "DogPayload" from the stream.
	Recv() (*DogPayload, error)
}

// CatPayload is the payload type of the Pet Service service SendCat method.
type CatPayload struct {
	Cat pets.Cat
}

// DogPayload is the streaming payload type of the Pet Service service SendDogs
// method.
type DogPayload struct {
	Dog pets.Dog
}
