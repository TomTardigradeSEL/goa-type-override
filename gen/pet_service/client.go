// Code generated by goa v3.11.3, DO NOT EDIT.
//
// Pet Service client
//
// Command:
// $ goa gen petsvc/design

package petservice

import (
	"context"

	goa "goa.design/goa/v3/pkg"
)

// Client is the "Pet Service" service client.
type Client struct {
	SendDogsEndpoint    goa.Endpoint
	ReceiveDogsEndpoint goa.Endpoint
	SendCatEndpoint     goa.Endpoint
	ReceiveCatEndpoint  goa.Endpoint
}

// NewClient initializes a "Pet Service" service client given the endpoints.
func NewClient(sendDogs, receiveDogs, sendCat, receiveCat goa.Endpoint) *Client {
	return &Client{
		SendDogsEndpoint:    sendDogs,
		ReceiveDogsEndpoint: receiveDogs,
		SendCatEndpoint:     sendCat,
		ReceiveCatEndpoint:  receiveCat,
	}
}

// SendDogs calls the "SendDogs" endpoint of the "Pet Service" service.
func (c *Client) SendDogs(ctx context.Context) (res SendDogsClientStream, err error) {
	var ires any
	ires, err = c.SendDogsEndpoint(ctx, nil)
	if err != nil {
		return
	}
	return ires.(SendDogsClientStream), nil
}

// ReceiveDogs calls the "ReceiveDogs" endpoint of the "Pet Service" service.
func (c *Client) ReceiveDogs(ctx context.Context) (res ReceiveDogsClientStream, err error) {
	var ires any
	ires, err = c.ReceiveDogsEndpoint(ctx, nil)
	if err != nil {
		return
	}
	return ires.(ReceiveDogsClientStream), nil
}

// SendCat calls the "SendCat" endpoint of the "Pet Service" service.
func (c *Client) SendCat(ctx context.Context, p *CatPayload) (err error) {
	_, err = c.SendCatEndpoint(ctx, p)
	return
}

// ReceiveCat calls the "ReceiveCat" endpoint of the "Pet Service" service.
func (c *Client) ReceiveCat(ctx context.Context) (res *CatPayload, err error) {
	var ires any
	ires, err = c.ReceiveCatEndpoint(ctx, nil)
	if err != nil {
		return
	}
	return ires.(*CatPayload), nil
}
